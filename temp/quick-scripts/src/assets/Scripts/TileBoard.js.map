{"version":3,"sources":["assets\\Scripts\\TileBoard.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport Tile from \"./Tile\";\nimport TileGrid from \"./TileGrid\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class TileBoard extends cc.Component {\n\n    @property(cc.Prefab)\n    tile_prefab: cc.Prefab = null\n\n    @property(cc.Node)\n    game_control: cc.Node = null\n\n    grid: TileGrid\n    tiles: Array<Tile>\n    waiting: boolean\n\n    random: number\n    count: number\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () \n    {\n        this.grid = this.node.getChildByName(\"Grid\").getComponent(\"TileGrid\")\n        this.tiles = new Array(16)\n        this.waiting = false\n        \n\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n    }\n\n    ClearBoard()\n    {\n        this.random = 0\n        this.count = 1\n        this.random = Math.floor(Math.random()*(20-8) + 8)\n        for(let i = 0; i < this.grid.cells.length; i++)\n        {\n            if(this.grid.cells[i] != null)\n                this.grid.cells[i].SetTile(null);\n        }\n\n        for(let i = 0; i < this.tiles.length; i++)\n        {\n            if(this.tiles[i] != null)\n                this.tiles[i].node.destroy()\n        }\n\n        this.tiles.splice(0, this.tiles.length);\n    }\n\n    CreateTile(number) \n    {\n        let tile = cc.instantiate(this.tile_prefab).getComponent(\"Tile\")\n        this.grid.node.addChild(tile.node)\n        tile.SetState(number)\n\n        tile.AnimateCreate(1, 0.2)\n\n        tile.Spawn(this.grid.GetRandomEmptyCell(), this.grid.node)\n\n        this.tiles.push(tile)\n    }\n\n    onKeyDown (event) \n    {\n        if(!this.waiting)\n        {\n            switch(event.keyCode) {\n            case cc.macro.KEY.up:\n            case cc.macro.KEY.w:\n                this.MoveTiles(cc.v2(0,+1), 0, 1, 1, 1)\n                break\n            case cc.macro.KEY.down:\n            case cc.macro.KEY.s:\n                this.MoveTiles(cc.v2(0,-1), 0, 1, this.grid.height - 2, -1)\n                break\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.a:\n                this.MoveTiles(cc.v2(-1,0), 1, 1, 0, 1)\n                break\n            case cc.macro.KEY.right:\n            case cc.macro.KEY.d:   \n                this.MoveTiles(cc.v2(1,0), this.grid.width - 2, -1, 0, 1)\n                break\n            }\n        }\n        \n    }\n\n    MoveTiles(direction: cc.Vec2, startX: number, incrementX: number, startY: number, incrementY: number)\n    {\n        let count = 0\n        for (let x = startX; x >= 0 && x < this.grid.width; x += incrementX)\n        {\n            for (let y = startY; y >= 0 && y < this.grid.height; y += incrementY)\n            {\n                let cell = this.grid.GetCell(x, y)\n                \n                if(cell.tile != null)\n                    count += this.MoveTile(cell.tile, direction) == true? 1 : 0\n                       \n            }\n        }\n        \n        if(count != 0)\n        {\n            this.WaitForChanges()\n            //changed = false\n            count = 0\n        }\n    }\n    \n    MoveTile(tile:Tile, direction: cc.Vec2)\n    {\n        var newCell = null\n        var adjacent = this.grid.GetAdjacentCell(tile.cell, direction)\n        \n        while(adjacent != null)\n        {              \n            if(adjacent.occupied)\n            {\n                if(this.checkCanMerge(tile, adjacent.tile))\n                {\n                    //merge\n                    this.Merge(tile, adjacent.tile)\n                    return true\n                }\n                break;\n            }\n            newCell = adjacent\n            adjacent = this.grid.GetAdjacentCell(adjacent, direction)\n            \n            \n        }\n        \n        if(newCell != null && newCell.empty)\n        {\n            tile.MoveTo(newCell, this.grid.node)\n            return true;\n        }\n\n        return false\n            \n    }\n\n    checkCanMerge(a: Tile, b:Tile)\n    {\n        return a.number == b.number && !b.locked\n    }\n\n    Merge(a: Tile, b: Tile)\n    {\n        //this.tiles.splice(a)\n\n        let indexToDelete = this.tiles.indexOf(a);\n        if (indexToDelete !== -1)\n            this.tiles.splice(indexToDelete, 1);\n    \n\n        a.Merge(b.cell, this.grid.node)\n\n        let number = b.number * 2;\n        b.SetState(number)\n\n        this.game_control.getComponent(\"game_control\").IncreaseScore(number)\n\n        b.AnimateMerge(1.2, 0.4)\n\n        this.WaitForSecond(200)\n    }\n\n    \n\n\n    WaitForChanges()\n    {\n        this.WaitForSecond(300)\n\n\n        for(let i=0; i < this.tiles.length; i++)\n            if(this.tiles[i] != null)\n                this.tiles[i].locked = false;\n        \n        if(this.tiles.length != this.grid.size)\n        {\n            if(this.count != this.random)\n            {\n                this.CreateTile(2)\n                this.count++\n            }\n            else\n            {\n                this.CreateTile(4)\n                this.count = 1\n                this.random = Math.floor(Math.random()*(20-8) + 8)\n                \n            }\n        }\n            \n\n        if(this.CheckForGameOver())\n        {\n            console.log(\"gameOver\")\n            this.game_control.getComponent(\"game_control\").GameOver()\n        }\n        \n    }\n\n    async WaitForSecond(ms: number)\n    {\n        this.waiting = true\n\n        await this.sleep(ms)\n\n        this.waiting = false\n    }\n\n    sleep(ms: number)\n    {\n        return new Promise(resolve => setTimeout(resolve, ms))\n    }\n\n    CheckForGameOver()\n    {\n        //Sửa lại length\n        if(this.tiles.length != this.grid.size)\n        {\n            \n            return false\n        }\n            \n\n        for(let i = 0; i < this.tiles.length; i++)\n        {\n            if(this.tiles[i].cell != null)\n            {\n                let up = this.grid.GetAdjacentCell(this.tiles[i].cell, cc.v2(0,1))\n                let down = this.grid.GetAdjacentCell(this.tiles[i].cell, cc.v2(0,-1))\n                let left = this.grid.GetAdjacentCell(this.tiles[i].cell, cc.v2(-1,0))\n                let right = this.grid.GetAdjacentCell(this.tiles[i].cell, cc.v2(1,0))\n\n                if(up != null && this.checkCanMerge(this.tiles[i], up.tile))\n                    return false\n\n                if(down != null && this.checkCanMerge(this.tiles[i], down.tile))\n                    return false\n\n                if(left != null && this.checkCanMerge(this.tiles[i], left.tile))\n                    return false\n\n                if(right != null && this.checkCanMerge(this.tiles[i], right.tile))\n                    return false\n            }\n\n        }\n        return true\n    }\n\n}\n"]}