{"version":3,"sources":["assets\\Scripts\\Tile_v0.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","cc","Class","Component","properties","TileState","cell","TileCell","onLoad","number","locked","start","SetState","text","node","getChildByName","data","vv","getTileValue","bgColor","color","textColor","getComponent","Label","string","toString","Spawn","grid","SetTile","cellWorldPos","convertToWorldSpaceAR","v2","gridLocalPos","convertToNodeSpaceAR","setPosition","MoveTo","AnimateMove","Merge","to","merging","_this","_callee","elapsed","duration","from","t","_callee$","_context","position","clone","lerp","sleep","destroy","AnimateScale","scaleTo","_this2","_callee2","halfDuration","_t","_callee2$","_context2","scale","misc","ms","setTimeout"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n    properties: {\n        state:{\n            default:null,\n            type: cc.TileState\n        },\n        cell:{\n            default:null,\n            type: cc.TileCell\n        },\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.number = 0\n        this.locked = false\n        \n    },\n\n    start () {\n\n    },\n\n    // update (dt) {},\n\n    SetState(number){\n        this.number = number\n\n        let text = this.node.getChildByName(\"Text\")\n        let data = cc.vv.TileState.getTileValue(number)\n        if (data){\n            \n            if (data.bgColor){\n                this.node.color = data.bgColor\n            }\n            if (data.textColor){\n                text.color = data.textColor\n            }\n            text.getComponent(cc.Label).string = this.number.toString() \n        }\n    },\n\n    Spawn(cell, grid){\n        if(this.cell != null) {\n            this.cell.SetTile(null); // Đặt tile của cell cũ thành null\n        }\n\n        this.cell = cell\n\n\n        this.cell.SetTile(this)\n        \n        \n\n        // this.node.position = cell.node.convertToWorldSpaceAR(cc.v2(0,0))\n\n        // Lấy vị trí của cell trong thế giới (world space)\n        let cellWorldPos = cell.node.convertToWorldSpaceAR(cc.v2(0, 0));\n\n        // Chuyển đổi vị trí toàn cục của cell sang vị trí cục bộ của grid\n        let gridLocalPos = grid.convertToNodeSpaceAR(cellWorldPos);\n\n        // Đặt vị trí của tile bằng với vị trí cục bộ của grid\n        this.node.setPosition(gridLocalPos);\n\n        // Thêm tile vào làm con của grid\n        //grid.addChild(this.node);\n\n    },\n\n    MoveTo(cell, grid){\n        if(this.cell != null) {\n            this.cell.SetTile(null); // Đặt tile của cell cũ thành null\n        }\n            \n\n        this.cell = cell\n        this.cell.SetTile(this)\n        \n\n        // this.node.position = cell.node.convertToWorldSpaceAR(cc.v2(0,0))\n\n        // Lấy vị trí của cell trong thế giới (world space)\n        let cellWorldPos = cell.node.convertToWorldSpaceAR(cc.v2(0, 0));\n\n        // Chuyển đổi vị trí toàn cục của cell sang vị trí cục bộ của grid\n        let gridLocalPos = grid.convertToNodeSpaceAR(cellWorldPos);\n\n        // Đặt vị trí của tile bằng với vị trí cục bộ của grid\n        // this.node.setPosition(gridLocalPos);\n\n        this.AnimateMove(gridLocalPos, false)\n\n        \n    },\n\n    Merge(cell, grid)\n    {\n        if(this.cell != null) {\n            this.cell.SetTile(null); // Đặt tile của cell cũ thành null\n        }\n\n        this.cell = null\n\n        \n\n        // Lấy vị trí của cell trong thế giới (world space)\n        let cellWorldPos = cell.node.convertToWorldSpaceAR(cc.v2(0, 0));\n\n        // Chuyển đổi vị trí toàn cục của cell sang vị trí cục bộ của grid\n        let gridLocalPos = grid.convertToNodeSpaceAR(cellWorldPos);\n\n        // Đặt vị trí của tile bằng với vị trí cục bộ của grid\n        this.AnimateMove(gridLocalPos, true)\n\n        //this.AnimateScale(1.2, 1)\n\n    },\n\n    async AnimateMove(to, merging)\n    {\n        let elapsed = 0\n        const duration = 0.3\n\n        const from = this.node.position.clone()\n\n        while(elapsed < duration)\n        {\n            const t = elapsed/duration\n            this.node.position = from.lerp(to, t)\n            elapsed += 1/60\n            await this.sleep(0)\n        }\n\n        this.node.position = to\n\n        if(merging)\n        {\n            this.node.destroy()\n        }\n    },\n\n    async AnimateScale(scaleTo, duration) {\n        const from = this.node.scale;  \n        const halfDuration = duration / 2; \n        \n        // Phần phóng to\n        let elapsed = 0;\n        while (elapsed < halfDuration) {\n            const t = elapsed / halfDuration;\n            this.node.scale = cc.misc.lerp(from, scaleTo, t);  \n    \n            elapsed += 1 /60;\n            await this.sleep(1000/60); \n        }\n    \n    \n        // Phần thu nhỏ\n        elapsed = 0;\n        while (elapsed < halfDuration) {\n            const t = elapsed / halfDuration;\n            this.node.scale = cc.misc.lerp(scaleTo, from, t);\n    \n            elapsed += 1 / 60;\n            await this.sleep(1000 / 60);  \n        }\n        this.node.scale = from;\n    },\n\n    sleep(ms)\n    {\n        return new Promise(resolve => setTimeout(resolve, ms))\n    }\n\n});\n"]}